import numpy as np
import os
import tensorflow as tf
from keras.models import load_model
import sys

# Adicione o caminho do diretório Gan ao sys.path
current_directory = os.path.dirname(os.path.abspath(__file__))
parent_directory = os.path.dirname(current_directory)
gan_directory = os.path.join(parent_directory, 'GAN')
sys.path.append(gan_directory)

from gan_ip import wasserstein_loss

current_dir = os.path.dirname(os.path.abspath(__file__))

generator_path = os.path.join(gan_directory, 'models/generator_model50.keras')

def generate_packet_by_gan():
    '''Generate packets using GAN
    
    Returns:
        packet: Generated packet
    '''
    # Carregar o modelo gerador
    generator = load_model(generator_path, custom_objects={'wasserstein_loss': wasserstein_loss})

    # Gerar ruído aleatório para entrada do gerador
    noise = np.random.normal(0.0, 1.0, (1, 1024))

    # Gerar imagens usando o gerador
    generated_images = generator.predict(noise)

    for image in generated_images:
        image = (image + 1) * 127.5
        packet = image.astype(np.uint8)
        
    print("Packets generated by GAN!")
    
    return packet
    